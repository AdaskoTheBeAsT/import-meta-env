import{_ as n,c as a,o as e,a as t}from"./app.4c54afb2.js";const k='{"title":"Home","description":"","frontmatter":{"home":true,"heroText":"Import-meta-env","tagline":"Populate environment variables just before running your application.","actionText":"Get Started","actionLink":"/guide","features":[{"title":"Feature Rich","details":"Out-of-the-box support for Webpack, Rollup and Vite, CSR, SSR and SSG, and unit testing tools. Powered by Unplugin and Babel."},{"title":"Strict","details":"Code has no access to arbitrary environment variables by default."},{"title":"Cross-platform","details":"Populate your environment variables anywhere, such as the Alpine Linux nginx image. Powered by pkg."}],"footer":"MIT Licensed | Copyright \xA9 2021-present Ernest"},"headers":[{"level":2,"title":"The Problem","slug":"the-problem"},{"level":2,"title":"Solution","slug":"solution"}],"relativePath":"index.md"}',s={},o=t('<h2 id="the-problem" tabindex="-1">The Problem <a class="header-anchor" href="#the-problem" aria-hidden="true">#</a></h2><p>Since there is no such environment variable in the browser environment. We typically use <a href="https://webpack.js.org/plugins/environment-plugin/">Webpack</a> or <a href="https://github.com/rollup/plugins/tree/master/packages/replace#usage">Rollup</a> to statically replace all occurrences of <code>process.<wbr>env.KEY</code> (or <a href="https://vitejs.dev/guide/env-and-mode.html">Vite</a>&#39;s <code>import.<wbr>meta.env.KEY</code>) with the given string value.</p><p>This can be a problem because we might want to put environment variables into the <a href="https://kubernetes.io/docs/concepts/configuration/configmap/" target="_blank" rel="noopener noreferrer">Kubernetes ConfigMap</a> or pass them when running the container:</p><div class="language-bash"><pre><code><span class="token function">docker</span> run -d -p <span class="token number">8080</span>:80 --env <span class="token assign-left variable">NAME</span><span class="token operator">=</span>world my-app\n</code></pre></div><p>But at this stage, we can&#39;t change the environment variables anymore, because <code>NAME</code> has been replaced with some values during the build process.</p><h2 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-hidden="true">#</a></h2><p>To achieve this, this plugin exposes environment variables on a special <code>import.<wbr>meta.env</code><a href="./guide.html#why-use-importmeta"><sup>?</sup></a> object:</p><div class="language-js"><pre><code><span class="token comment">// src/index.js</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>During production it will be statically replaced with a placeholder:</p><div class="language-js"><pre><code><span class="token comment">// dist/index.js</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token string">&quot;__import_meta_env_placeholder__&quot;</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Then we can run the <a href="./guide.html#install-cli">CLI</a> anywhere, populating files with environment variables from the system:</p><div class="language-js"><pre><code><span class="token comment">// dist/index.js</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token string">&quot;world&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',12),p=[o];function i(c,l,r,u,d,h){return e(),a("div",null,p)}var g=n(s,[["render",i]]);export{k as __pageData,g as default};
