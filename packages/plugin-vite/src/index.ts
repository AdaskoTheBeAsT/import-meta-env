import { Plugin, ResolvedConfig } from "vite";

const createPlugin: () => Plugin = () => {
  const name = "runtime-config";

  const uniqueId = Array(10)
    .fill(null)
    .map(() =>
      Math.random()
        .toString(36)
        .replace(/[^a-z]/g, "")
    )
    .join("");

  let config: ResolvedConfig;
  return <Plugin>{
    name,
    configResolved(_config) {
      config = _config;
    },
    resolveId(id) {
      if (id === ".env") {
        return id;
      }
    },
    load(id) {
      if (config.command === "serve") {
        if (id === "/" + ".env") {
          const result = `export default ${JSON.stringify(config.env)}`;
          return result;
        }
      } else {
        if (id === ".env") {
          this.emitFile({
            type: "asset",
            fileName: `${config.build.assetsDir}/.env.js`,
            source: [
              `// Generated by runtime config, you should swap this file to change env.`,
              `// https://vitejs.dev/guide/env-and-mode.html#env-files`,
              `export default ${JSON.stringify(config.env)}`,
            ].join("\n"),
          });

          return [`export default ${uniqueId}`].join("\n");
        }
      }
    },
    renderChunk(code, chunk) {
      if (code.includes(uniqueId)) {
        return `import ${uniqueId} from './.env.js';` + code;
      }

      if (chunk.name === ".env") {
        return [
          `import env from ${JSON.stringify("./.env.js")};`,
          `export default env`,
        ].join("\n");
      }

      return undefined;
    },
  };
};

export default createPlugin;
